---
- name: Check if RHODS namespace exists
  kubernetes.core.k8s_info:
    kind: Namespace
    api_version: v1
    name: "{{ __rhoai_operator_map.rhods.namespace }}"
  register: _rhoai_ods_ns

# The RHODS operator has its own uninstaller
# https://access.redhat.com/documentation/en-us/red_hat_openshift_ai_self-managed/2-latest/html/installing_and_uninstalling_openshift_ai_self-managed/uninstalling-openshift-ai-self-managed_uninstalling-openshift-ai-self-managed
- name: Trigger RHODS uninstall
  when: _rhoai_ods_ns.resources | length == 1
  kubernetes.core.k8s:
    state: present
    definition:
      kind: ConfigMap
      apiVersion: v1
      metadata:
        name: delete-self-managed-odh
        namespace: "{{ __rhoai_operator_map.rhods.namespace }}"
        labels:
          api.openshift.com/addon-managed-odh-delete: "true"

- name: Wait for the RHODS applications to disappear
  kubernetes.core.k8s_info:
    kind: Project
    api_version: project.openshift.io/v1
    name: redhat-ods-applications
  register: _rhoai_ods_apps
  retries: 30
  delay: 10
  until: _rhoai_ods_apps.resources | length == 0

- name: Remove RHODS namespace
  kubernetes.core.k8s:
    state: absent
    kind: Namespace
    api_version: v1
    name: "{{ __rhoai_operator_map.rhods.namespace }}"
    wait: true

- name: Uninstall operators
  ansible.builtin.include_tasks: uninstall_operator.yml
  vars:
    rhoai_op_name: "{{ item }}"
    rhoai_op_package: "{{ __rhoai_operator_map[item].package }}"
    rhoai_op_channel: "{{ __rhoai_operator_map[item].channel }}"
    rhoai_op_namespace: "{{ __rhoai_operator_map[item].namespace }}"
  loop:  # uninstall in order
    - serverless
    - servicemesh

# Have to clean up additional resources according to
# https://docs.openshift.com/container-platform/4.14/service_mesh/v1x/removing-ossm.html
- name: Remove istio DaemonSet
  kubernetes.core.k8s:
    state: absent
    kind: DaemonSet
    name: istio-node
    namespace: openshift-operators

- name: Remove istio ClusterRole resources
  kubernetes.core.k8s:
    state: absent
    name: "{{ item }}"
    kind: ClusterRole
    api_version: rbac.authorization.k8s.io/v1
    wait: true
  loop:
    - istio-admin
    - istio-cni

- name: Remove istio-cni ClusterRoleBinding
  kubernetes.core.k8s:
    state: absent
    kind: ClusterRoleBinding
    api_version: rbac.authorization.k8s.io/v1
    name: istio-cni
    wait: true

- name: Remove more istio ClusterRole resources
  kubernetes.core.k8s:
    state: absent
    name: "{{ item }}"
    kind: ClusterRole
    api_version: rbac.authorization.k8s.io/v1
    wait: true
  loop:
    - istio-view
    - istio-edit

- name: Get CRDs to clean after
  kubernetes.core.k8s_info:
    kind: CustomResourceDefinition
    api_version: apiextensions.k8s.io/v1
  register: _rhoai_crds
  no_log: true  # too noisy

- name: Remove istio.io and maistra.io leftover CRDs
  kubernetes.core.k8s:
    state: absent
    kind: CustomResourceDefinition
    api_version: apiextensions.k8s.io/v1
    name: "{{ item.metadata.name }}"
  loop: "{{ _rhoai_crds.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"
  no_log: true  # too noisy
  when: >
    item.metadata.name is search('.*\.istio\.io$') or
    item.metadata.name is search('.*\.maistra\.io$')
...
