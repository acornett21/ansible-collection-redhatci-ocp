---

- name: Identify the Git repo transport protocol
  ansible.builtin.set_fact:
    gcr_repo_protocol_http: "{{ gcr_ztp_gitops_repo | regex_search('https?://') | type_debug == 'str' }}"

- name: Assert the required variables are defined
  ansible.builtin.assert:
    that:
      - gcr_ztp_gitops_repo is defined
      - gcr_ztp_gitops_repo | length > 0
      - >
          (gcr_repo_protocol_http and
          gcr_repo_username is defined and gcr_repo_username | length > 0 and
          gcr_repo_password is defined and gcr_repo_password | length > 0) or
          (gcr_ssh_key_path is defined and gcr_ssh_key_path | length > 0)

- name: Add ssh_known_hosts to ArgoCD
  kubernetes.core.k8s:
    api_version: v1
    kind: ConfigMap
    name: "{{ gcr_argo_cd_known_host_cm }}"
    namespace: openshift-gitops
    resource_definition:
      labels:
        app.kubernetes.io/name: argocd-cm
        app.kubernetes.io/part-of: argocd
      data:
        ssh_known_hosts: |
          {{ gcr_ssh_known_hosts }}
  when:
    - gcr_ssh_known_hosts is defined
    - gcr_ssh_known_hosts | length > 0
  no_log: true

- name: Set up a SSH private repository
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'ssh_private_repo.yaml.j2') | from_yaml }}"
  when: not gcr_repo_protocol_http
  no_log: true

- name: Set up a HTTP private repository
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'http_private_repo.yaml.j2') | from_yaml }}"
  when: gcr_repo_protocol_http
  no_log: true
