---
- name: Set a random name for the test file
  ansible.builtin.set_fact:
    vhs_test_file_name: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters,digits') }}"

- name: Set test file contents
  ansible.builtin.set_fact:
    contents: "{{ lookup('template', 'test_file.j2') }}"

- name: Copy file to http_store
  ansible.builtin.copy:
    content: "{{ contents }}"
    dest: "{{ http_store_dir }}/{{ vhs_test_file_name }}"
    mode: "0644"
    setype: httpd_sys_content_t
  become: true
  delegate_to: http_store

- name: Retrieve file from http_store
  ansible.builtin.uri:
    url: "{{ http_host }}/{{ vhs_test_file_name }}"
    return_content: true
  register: response
  delegate_to: bastion
  retries: 12
  delay: 5
  until: response.status == 200

- name: Check content matches
  ansible.builtin.assert:
    that:
      response.content == contents
    quiet: true

- name: Remove file on http_store
  ansible.builtin.file:
    path: "{{ http_store_dir }}/{{ vhs_test_file_name }}"
    state: absent
  become: true
  delegate_to: http_store
