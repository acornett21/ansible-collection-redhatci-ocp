---
- name: Copy PullSecret into {{ pullsecret_file }}
  copy:
    content: "{{ pullsecret }}"
    dest: "{{ pullsecret_file }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
    force: true
  tags:
    - pullsecret
    - extract

- name: Get the PullSecret from provisioner into temp file on control machine
  fetch:
    dest: /tmp/
    flat: true
    src: "{{ dir }}/pull-secret.txt"
  when:
    - registry_creation|bool
    - groups['registry_host'][0] != groups['provisioner'][0]
  tags:
    - extract

- name: Create config dir
  file:
    path: "{{ dir }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  when:
    - registry_creation|bool
    - groups['registry_host'][0] != groups['provisioner'][0]
  delegate_to: "{{ groups['registry_host'][0] }}"
  tags:
    - extract

- name: Copy the PullSecret from control machine to the registry host
  copy:
    src: /tmp/pull-secret.txt
    dest: "{{ dir }}/pull-secret.txt"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  become: true
  when:
    - registry_creation|bool
    - groups['registry_host'][0] != groups['provisioner'][0]
  delegate_to: "{{ groups['registry_host'][0] }}"
  tags:
    - extract

- name: Remove the temporary copy of the PullSecret on control machine
  file:
    path: /tmp/pull-secret.txt
    state: absent
  when:
    - registry_creation|bool
    - groups['registry_host'][0] != groups['provisioner'][0]
  delegate_to: localhost
  tags:
    - extract

- name: Confirm whether or not internet connectivity on provisioner host
  uri:
    url: https://www.redhat.com
    status_code: [-1, 200, 301]
    timeout: 1
  retries: 3
  delay: 10
  until: the_url.status in [200, 301]
  failed_when: false
  register: the_url
  tags:
    - extract

- name: Setting Fact of which ansible temp file to use
  set_fact:
    tempdir_loc: "{{ disconnected_installer | ternary(registry_host_tempdir, tempdir) }}"
  tags:
    - extract

- name: Extracting the installer
  command: >
    /usr/local/bin/oc adm release extract
    --registry-config {{ pullsecret_file | quote }}
    --command={{ installer_cmd |quote }}
    --to {{ tempdir_loc }} {{ disconnected_installer | ternary(disconnected_installer, release_image) }}
  args:
    chdir: "{{ tempdir }}"
  when: (disconnected_installer|length or the_url.status in [200,301])
  delegate_to: "{{ disconnected_installer | ternary(groups['registry_host'][0], groups['provisioner'][0]) }}"
  tags: extract
  register: _installer_extract
  retries: 9
  delay: 10
  until: _installer_extract is not failed
  changed_when: false

- name: Remove the temporary copy of the PullSecret on registry host
  file:
    path: "{{ dir }}"
    state: absent
  when:
    - registry_creation|bool
    - groups['registry_host'][0] != groups['provisioner'][0]
  delegate_to: "{{ groups['registry_host'][0] }}"
  tags:
    - extract

- name: OFFLINE mode requires installer pre-extracted
  get_url:
    url: "{{ webserver_url }}/{{ version }}/{{ installer_cmd }}"
    dest: "{{ tempdir }}/{{ installer_cmd }}"
  register: result
  retries: 3
  delay: 10
  until: result is not failed
  when: (the_url.status == -1 and disconnected_installer|length == 0)
  tags:
    - extract

- name: Copy install binary to /usr/local/bin
  copy:
    src: "{{ tempdir_loc }}/{{ installer_cmd }}"
    dest: /usr/local/bin/
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
    remote_src: true
  delegate_to: "{{ disconnected_installer | ternary(groups['registry_host'][0], groups['provisioner'][0]) }}"
  become: true
  tags: extract

- name: Get the install from registry host into temp file on control machine
  fetch:
    dest: /tmp/
    flat: true
    src: "{{ tempdir_loc }}/{{ installer_cmd }}"
  when: registry_creation|bool
  delegate_to: "{{ groups['registry_host'][0] }}"
  tags:
    - extract

- name: Copy the install binary from control machine to the provisioner host
  copy:
    src: /tmp/{{ installer_cmd }}
    dest: "/usr/local/bin/{{ installer_cmd }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  become: true
  when:
    - registry_creation|bool
    - groups['registry_host'][0] != groups['provisioner'][0]
  tags:
    - extract

- name: Remove the temporary copy of the install binary on control machine
  file:
    path: "/tmp/{{ installer_cmd }}"
    state: absent
  when:
    - registry_creation|bool
    - groups['registry_host'][0] != groups['provisioner'][0]
  delegate_to: localhost
  tags:
    - extract
