---
- name: Ensure organization_id is defined
  ansible.builtin.assert:
    that: organization_id is defined
    fail_msg: "The organization_id variable is not defined"

- name: "Get projects already linked to the PL {{ pyxis_product_list_identifier }}"
  vars:
    pyxis_apikey: "{{ lookup('file', pyxis_apikey_path) }}"
  ansible.builtin.uri:
    url: >
      {{ catalog_url }}/product-listings/id/{{ pyxis_product_list_identifier }}/projects/certification?include=data._id&page_size={{ page_size }}&page=0
    method: GET
    headers:
      X-API-KEY: "{{ pyxis_apikey }}"
    body_format: json
    status_code: 200
    timeout: 120
  register: cert_project_list_output
  retries: 2
  delay: 60
  until: not cert_project_list_output.failed

- name: "Build a list of projects already linked to the PL {{ pyxis_product_list_identifier }}"
  ansible.builtin.set_fact:
    prev_projects: "{{ cert_project_list_output.json.data | map(attribute='_id') | list }}"
  when: cert_project_list_output.json.data | length

- name: "Append the current project into the list to link to PL"
  ansible.builtin.set_fact:
    all_cert_projects: "{{ prev_projects | default([]) + [ccp_cert_project_id] }}"

- name: Ensure that all_cert_projects is not empty
  ansible.builtin.assert:
    that: all_cert_projects | length
    fail_msg: "all_cert_projects should not be empty, please debug"
    success_msg: "all_cert_projects: {{ all_cert_projects }}"
...
