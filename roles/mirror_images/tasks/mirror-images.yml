---
- name: "Mirror image"
  vars:
    _image_tag: "{{ image | regex_search('(?<=sha256)(.{12})') | default('', True) }}"
    _image_name: "{{ '/'.join(image.split('@')[0].split('/')[-1:]) }}"
    _image_org: "{{ '/'.join(image.split('@')[0].split('/')[1:-1]) }}"
    _tgt_image_location: "{{ mi_registry }}/{{ (mi_dst_org | length) | ternary(mi_dst_org, _image_org) }}/{{ _image_name }}{%- if _image_tag | length %}{{ _image_tag }}{% endif %}"
  block:
    - name: "Mirror image"
      ansible.builtin.command:
        cmd: >
          skopeo copy
          --all
          {% if mi_options is defined %}
          {{ mi_options }}
          {% endif %}
          --remove-signatures
          {% if mi_authfile is defined %}
          --authfile {{ mi_authfile }}
          {% endif %}
          {% if mi_src_authfile is defined %}
          --src-authfile {{ mi_src_authfile }}
          {% endif %}
          {% if mi_dst_authfile is defined %}
          --dest-authfile {{ mi_dst_authfile }}
          {% endif %}
          --dest-tls-verify=false
          docker://{{ image }}
          docker://{{ _tgt_image_location }}
      register: _mi_skopeo_copy
      retries: 5
      delay: 5
      until: _mi_skopeo_copy is not failed

  rescue:
    - name: "Image already mirrored"
      ansible.builtin.command: >
        skopeo inspect
        {% if mi_authfile is defined %}
        --authfile {{ mi_authfile }}
        {% endif %}
        {% if mi_dst_authfile is defined %}
        --authfile {{ mi_dst_authfile }}
        {% endif %}
        --tls-verify=false
        docker://{{ _tgt_image_location }}
      register: _mi_inspect
      failed_when: _mi_inspect.rc != 0
...
