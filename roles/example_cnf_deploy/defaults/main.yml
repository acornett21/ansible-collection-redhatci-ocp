---

# Default namespace
ecd_cnf_namespace: example-cnf

# Catalog/Image-related variables
ecd_registry_url: quay.io
ecd_repo_name: rh-nfv-int
ecd_catalog_name: nfv-example-cnf-catalog
ecd_operator_version: ""
ecd_catalog_image: "{{ ecd_registry_url }}/{{ ecd_repo_name }}/{{ ecd_catalog_name }}:{{ ecd_operator_version }}"
ecd_image_pull_policy: IfNotPresent

# Default path for binaries
ecd_oc_path: /usr/local/bin/oc
ecd_opm_path: /usr/local/bin/opm

# Logs folder
ecd_job_logs_path: /tmp

# CNFApp to select
ecd_cnfapp_name: grout

# Operators/apps to enable
ecd_enable_testpmd: false
ecd_enable_grout: true
ecd_enable_trex: true
ecd_enable_trex_app: true

# Operator installation
ecd_testpmd_channel: alpha
ecd_grout_channel: alpha
ecd_trex_channel: alpha

# Network configuration

## (Required for Grout deployment) Path to the network configuration file to be used to set the IP and MAC addresses for
## each interface of both CNFApp and TRex
ecd_network_config_file: ""

## Default static MAC addresses used by the deployed workloads (if providing `ecd_network_config_file`, they are updated)
ecd_trex_mac_list:
  - "20:04:0f:f1:89:01"
  - "20:04:0f:f1:89:02"
ecd_cnfapp_mac_list:
  - "80:04:0f:f1:89:01"
  - "80:04:0f:f1:89:02"

## No default static IP addresses are provided for the deployed workloads. To update them, they must be provided on
## `ecd_network_config_file` (just required when using Grout, optional for TestPMD since it is launched on MAC forwarding mode)
ecd_trex_ip_list:
  - ""
  - ""
ecd_cnfapp_ip_list:
  - ""
  - ""

## Variables for gathering the network info from the scenario
### SRIOV networks used in the connection between TRex and CNF Application, together with the number of interfaces to be used per network
ecd_sriov_networks: []
### Networks for CNFApp, including MAC addresses and (if provided) IP addresses
ecd_networks_cnfapp: []
### Networks for TRex, including MAC addresses and (if provided) IP addresses
ecd_networks_trex: []

# Run all deployment automation. If different than 1, the automation will only create the pods and prepare the scripts
# to launch testpmd/grout and trex manually afterwards
ecd_run_deployment: 1

# Enable container privileged mode, instead of setting specific capabilities.
# This is required when using Mellanox cards, because it requires access to /dev/vfio/vfio
# from host since it uses netdevice instead of vfio-pci. To achieve that, using a volume
# with hostPath is not enough, so that privileged mode is required
# (see https://access.redhat.com/solutions/6560521 for an example).
ecd_enable_privileged_mode: false

# RuntimeClass that should be used for running DPDK application,
# if the var is empty, the annotation irq-load-balancing.crio.io: "disable" is not applied
# ecd_high_perf_runtime: "performance-blueprint-profile"

# TestPMD related variables

## Termination grace period for testpmd
ecd_termination_grace_period_seconds: 30

## Use reduced mode (if different than 0), where only three cores are used, and txd/rxd parameters are doubled
ecd_testpmd_reduced_mode: 0

# TRex related variables

## Test configuration
## When duration is '-1', the trex will run in continous burst mode
##  - name: pkt-64-10kpps
##    packet_size: 64
##    packet_rate: 10kpps
##    duration: 120
##    trex_profile_name: ''
##    trex_profile_path: ''
##    trex_profile_cm_name: ''
ecd_trex_test_config: []

## Name of the TRex CR
ecd_trex_cr_name: trexconfig

## Name of the TRexApp CR
ecd_trex_app_cr_name: trex-app

## Main TRexApp parameters
### - Job duration. If set to -1, it will run in continuous burst mode
ecd_trex_duration: 120
### - Packet rate, in packets per second. Note the amount of bits sent per second cannot exceed
###   the link capacity, else TRexApp job will fail
ecd_trex_packet_rate: 10kpps
### - Packet size, in bytes
ecd_trex_packet_size: 64

## Default duration of TRex execution during draining validation
ecd_default_trex_duration: 1800

## Default packet rate from TRex
ecd_packet_rate: 10kpps

## Some nics like x540 supports only 2 queues, as number of cores will be
## used to create tx queues, restrict the cores to the trex parameter as per need
## 540 nics require this value to be set to 2
ecd_trex_core_count: 0

## If set to true, the automation behaves as if TRex job is deployed in continuous mode,
## even if ecd_trex_duration is not -1. This is to leave a job running with a given duration
## to perform some extra checks in different jobs.
ecd_trex_continuous_mode: false

## If set to true, wait until the end of the profile duration before continue
ecd_trex_tests_wait: true

## By default, till having a positive result, it is supposed that TRex job failed
ecd_trex_app_run_passed: false

## Track if TRex job has failed or not
ecd_trex_job_failed: false

## If set to true, even if TRex job fails, the job will progress
ecd_trex_tests_skip_failures: false

## The idea is always to try to run the migration test, unless TRex job failed before
ecd_try_running_migration_tests: true
