---
#
# Virtual Redfish BMC
# https://docs.openstack.org/sushy-tools/latest/user/dynamic-emulator.html#uefi-boot
#
- name: Identify System Manager
  ansible.builtin.include_tasks: get-sm.yml

- name: KVM Force Power Off System {{ target_host }}
  ansible.builtin.uri:
    url: "{{ system_uuid_url }}/Actions/ComputerSystem.Reset"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: POST
    body_format: json
    body: { "ResetType": "ForceOff" }
    status_code: [200, 204]
    force_basic_auth: false
    validate_certs: false
    return_content: true
  register: redfish_poweroff
  failed_when: false

- name: Eject Virtual Media
  ansible.builtin.include_tasks: eject.yml

- name: KVM Insert Virtual Media {{ target_host }}
  ansible.builtin.uri:
    url: "{{ system_manager_url }}/VirtualMedia/Cd/Actions/VirtualMedia.InsertMedia"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: POST
    body_format: json
    body: { "Image": "{{ boot_iso_url }}", "Inserted": true }
    status_code: [200, 204]
    force_basic_auth: false
    validate_certs: false
    return_content: true
    timeout: 120
  register: redfish_reply
  until: "redfish_reply.status == 204"
  retries: 20
  delay: 30

- name: Debug
  ansible.builtin.debug:
    var: redfish_reply
    verbosity: 1

- name: KVM Verify Virtual Media {{ target_host }}
  ansible.builtin.uri:
    url: "{{ system_manager_url }}/VirtualMedia/Cd"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: GET
    status_code: [200, 201]
    validate_certs: false
    return_content: true
  register: redfish_reply
  when: ansible_verbosity >= 1

- name: Debug
  ansible.builtin.debug:
    var: redfish_reply
    verbosity: 1

- name: KVM Set OneTimeBoot Virtual Media {{ target_host }}
  ansible.builtin.uri:
    url: "{{ system_uuid_url }}"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: PATCH
    body_format: json
    body:
      {
        "Boot":
          {
            "BootSourceOverrideTarget": "Cd",
            "BootSourceOverrideMode": "UEFI",
            "BootSourceOverrideEnabled": "Continuous",
          },
      }
    status_code: [200, 204]
    force_basic_auth: false
    validate_certs: false
    return_content: true
  register: redfish_reply

- name: Debug
  ansible.builtin.debug:
    var: redfish_reply
    verbosity: 1

- name: KVM Verify System Power State {{ target_host }}
  ansible.builtin.uri:
    url: "{{ system_uuid_url }}"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: GET
    status_code: [200, 201]
    validate_certs: false
    return_content: true
  register: redfish_reply

- name: Debug
  ansible.builtin.debug:
    var: redfish_reply
    verbosity: 1

- name: KVM Force Restart System {{ target_host }}
  ansible.builtin.uri:
    url: "{{ system_uuid_url }}/Actions/ComputerSystem.Reset"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: POST
    body_format: json
    body: { "ResetType": "ForceRestart" }
    status_code: [200, 204]
    force_basic_auth: false
    validate_certs: false
    return_content: true
  register: redfish_restart
  when: redfish_reply.json.PowerState == "On"

- name: KVM Force Power On System {{ target_host }}
  ansible.builtin.uri:
    url: "{{ system_uuid_url }}/Actions/ComputerSystem.Reset"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: POST
    body_format: json
    body: { "ResetType": "ForceOn" }
    # redfish specification: https://www.dmtf.org/sites/default/files/standards/documents/DSP0266_1.19.0.pdf
    status_code: [200, 201, 202, 204]
    force_basic_auth: false
    validate_certs: false
    return_content: true
  register: redfish_poweron
  when: redfish_reply.json.PowerState == "Off"
