---
- name: Get last commit id  # noqa: command-instead-of-module
  ansible.builtin.command: "git -C {{ item }} rev-parse HEAD"
  register: last_commit_id
  ignore_errors: true

- name: Get repo url  # noqa: command-instead-of-module
  ansible.builtin.command: "git -C {{ item }} config --get remote.origin.url"
  register: repo_url
  when: last_commit_id.rc == 0

- name: Search for the git component
  ansible.legacy.dci_component:
    state: search
    topic_id: "{{ job_info['job']['topic_id'] }}"
    uid: "{{ last_commit_id.stdout }}"
  register: _ic_search_git_component
  when: last_commit_id.rc == 0

- name: Create component if not found
  when:
    - _ic_search_git_component is defined
    - _ic_search_git_component is not changed
    - last_commit_id.rc == 0
  block:
    - name: Create git repo component
      ansible.legacy.dci_component:
        display_name: "{{ repo_url.stdout | basename | regex_replace('[.]git$', '') }} {{ last_commit_id.stdout[:7] }}"
        version: "{{ last_commit_id.stdout[:7] }}"
        uid: "{{ last_commit_id.stdout }}"
        team_id: "{{ job_info['job']['team_id'] }}"
        topic_id: "{{ job_info['job']['topic_id'] }}"
        type: "{{ repo_url.stdout | basename | regex_replace('[.]git$', '') }}"
        url: "{{ repo_url.stdout | regex_replace('^(.*)@(.*):(.*)', 'https://\\2/\\3') | regex_replace('^ssh://(.*)@(.*)', 'https://\\2') | regex_replace('[.]git$', '') }}/commit/{{ last_commit_id.stdout }}"
        state: present
      register: git_component

    - name: 'Attach git component to the job'
      ansible.legacy.dci_job_component:
        component_id: "{{ git_component.component.id }}"
        job_id: " {{ job_id }} "
      register: job_component_result
      until: job_component_result is not failed
      retries: 5
      delay: 20

...
