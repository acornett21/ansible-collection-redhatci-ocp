---
- name: Check if directory exists
  ansible.builtin.stat:
    path: "{{ os_config_dir }}"
  register: path_check

- name: "Fail if the configs directory does not exist"
  ansible.builtin.fail:
    msg: "Configs directory does not exist"
  when: not path_check.stat.exists

- name: Generate Random passwords for users htpasswd IdP
  ansible.builtin.set_fact:
    os_admin_pass: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters,digits') }}"
    os_basic_user_pass: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters,digits') }}"
    os_cluster_admin_pass: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters,digits') }}"
    os_nonadmin_pass: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters,digits') }}"

- name: "Save passwords to the cluster configs directory"
  ansible.builtin.copy:
    content: |
      # OCP automatically generated credentials for the API/GUI
      admin:{{ os_admin_pass }}
      basic_user:{{ os_basic_user_pass }}
      cluster_admin:{{ os_cluster_admin_pass }}
      nonadmin:{{ os_nonadmin_pass }}
    dest: "{{ os_config_dir }}/ocp_creds.txt"
    mode: '0640'

- name: Create http auth file
  ansible.builtin.htpasswd:
    path: "{{ os_config_dir }}/users.htpasswd"
    name: "{{ item.user }}"
    password: "{{ item.password }}"
    mode: "0640"
  loop:
    - user: admin
      password: "{{ os_admin_pass }}"
    - user: basic_user
      password: "{{ os_basic_user_pass }}"
    - user: cluster_admin
      password: "{{ os_cluster_admin_pass }}"
    - user: nonadmin
      password: "{{ os_nonadmin_pass }}"

- name: "Encoding the password file"
  ansible.builtin.slurp:
    src: "{{ os_config_dir }}/users.htpasswd"
  register: encoded_password

- name: "Set htpasswd config secret in openshift"
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: htpass-secret
        namespace: openshift-config
      type: Opaque
      data:
        htpasswd: "{{ encoded_password.content }}"
  no_log: true

- name: "Setup htpasswd auth IDP backend in openshift"
  community.kubernetes.k8s:
    definition:
      apiVersion: config.openshift.io/v1
      kind: OAuth
      metadata:
        name: cluster
      spec:
        identityProviders:
          - name: htpassidp
            challenge: true
            login: true
            mappingMethod: claim
            type: HTPasswd
            htpasswd:
              fileData:
                name: htpass-secret

- name: Grant permissions to users
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: "{{ user | replace('_', '-') }}-0"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: "{{ user | replace('_', '-') }}"
      subjects:
        - kind: User
          name: "{{ user }}"
  loop:
    - "admin"
    - "basic_user"
    - "cluster_admin"
  loop_control:
    loop_var: user

- name: Wait for MCP status  # noqa: redhat-ci[no-role-prefix]
  ansible.builtin.include_role:
    name: redhatci.ocp.check_resource
  vars:
    resource_to_check: "MachineConfigPool"
    check_wait_retries: 10
    check_wait_delay: 30
...
