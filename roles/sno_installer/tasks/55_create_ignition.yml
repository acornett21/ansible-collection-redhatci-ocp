---
- name: "Create OpenShift Ignition File"
  ansible.builtin.command: >
    {{ ocp_binary_path }}/openshift-install
    --dir {{ dir }}
    create single-node-ignition-config
  tags:
    - ignition

- name: "Set coreos sno ignition facts"
  ansible.builtin.set_fact:
    coreos_sno_ignition: "{{ si_cache_dir }}/{{ cluster }}.ign"

- name: "Extra tasks to get ignition file for baremetal SNO in disconnected mode"
  when:
    - si_cache_server != groups['provisioner'][0]
    - sno_install_type is defined
    - sno_install_type == "baremetal"
  tags:
    - ignition
  block:
    - name: "Get the ignition file from the provisione host into temp file on control machine"
      ansible.builtin.fetch:
        dest: "{{ _si_tmp_dir.path }}/"
        flat: true
        src: "{{ dir }}/bootstrap-in-place-for-live-iso.ign"

    - name: "Copy the ignition file from control machine to the registry host"
      ansible.builtin.copy:
        src: "{{ _si_tmp_dir.path }}/bootstrap-in-place-for-live-iso.ign"
        dest: "{{ coreos_sno_ignition }}"
        mode: "0644"
        setype: httpd_sys_content_t
      become: true
      delegate_to: "{{ groups['registry_host'][0] }}"

- name: "Extra tasks to get ignition file for baremetal SNO"
  when:
    - si_cache_server == groups['provisioner'][0]
    - sno_install_type is defined
    - sno_install_type == "baremetal"
  tags:
    - ignition
    - cache
  block:
    - name: "Copy OpenShift Ignition File"
      ansible.builtin.copy:
        src: "{{ dir }}/bootstrap-in-place-for-live-iso.ign"
        dest: "{{ coreos_sno_ignition }}"
        remote_src: true
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        mode: "0644"
        setype: httpd_sys_content_t
      become: true

- name: "Set coreos_sno_ignition_url fact"
  ansible.builtin.set_fact:
    coreos_sno_ignition_url: "http://{{ si_cache_server }}:{{ webserver_caching_port }}/{{ cluster }}.ign"
  when:
    - (coreos_sno_ignition_url is not defined or coreos_sno_ignition_url|length < 1)
    - sno_install_type is defined
    - sno_install_type == "baremetal"
  tags:
    - ignition
    - cache
...
